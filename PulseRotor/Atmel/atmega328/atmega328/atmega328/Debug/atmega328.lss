
atmega328.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003c  00800100  000006f2  00000786  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006f2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000d3  0080013c  0080013c  000007c2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007c2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000198  00000000  00000000  00000834  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000213f  00000000  00000000  000009cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000dac  00000000  00000000  00002b0b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c25  00000000  00000000  000038b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003b0  00000000  00000000  000044dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009eb  00000000  00000000  0000488c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000db7  00000000  00000000  00005277  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000148  00000000  00000000  0000602e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__vector_11>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

00000068 <__ctors_start>:
  68:	5d 01       	movw	r10, r26

0000006a <__ctors_end>:
  6a:	11 24       	eor	r1, r1
  6c:	1f be       	out	0x3f, r1	; 63
  6e:	cf ef       	ldi	r28, 0xFF	; 255
  70:	d8 e0       	ldi	r29, 0x08	; 8
  72:	de bf       	out	0x3e, r29	; 62
  74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_copy_data>:
  76:	11 e0       	ldi	r17, 0x01	; 1
  78:	a0 e0       	ldi	r26, 0x00	; 0
  7a:	b1 e0       	ldi	r27, 0x01	; 1
  7c:	e2 ef       	ldi	r30, 0xF2	; 242
  7e:	f6 e0       	ldi	r31, 0x06	; 6
  80:	02 c0       	rjmp	.+4      	; 0x86 <__do_copy_data+0x10>
  82:	05 90       	lpm	r0, Z+
  84:	0d 92       	st	X+, r0
  86:	ac 33       	cpi	r26, 0x3C	; 60
  88:	b1 07       	cpc	r27, r17
  8a:	d9 f7       	brne	.-10     	; 0x82 <__do_copy_data+0xc>

0000008c <__do_clear_bss>:
  8c:	22 e0       	ldi	r18, 0x02	; 2
  8e:	ac e3       	ldi	r26, 0x3C	; 60
  90:	b1 e0       	ldi	r27, 0x01	; 1
  92:	01 c0       	rjmp	.+2      	; 0x96 <.do_clear_bss_start>

00000094 <.do_clear_bss_loop>:
  94:	1d 92       	st	X+, r1

00000096 <.do_clear_bss_start>:
  96:	af 30       	cpi	r26, 0x0F	; 15
  98:	b2 07       	cpc	r27, r18
  9a:	e1 f7       	brne	.-8      	; 0x94 <.do_clear_bss_loop>

0000009c <__do_global_ctors>:
  9c:	10 e0       	ldi	r17, 0x00	; 0
  9e:	c5 e3       	ldi	r28, 0x35	; 53
  a0:	d0 e0       	ldi	r29, 0x00	; 0
  a2:	04 c0       	rjmp	.+8      	; 0xac <__do_global_ctors+0x10>
  a4:	21 97       	sbiw	r28, 0x01	; 1
  a6:	fe 01       	movw	r30, r28
  a8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__tablejump2__>
  ac:	c4 33       	cpi	r28, 0x34	; 52
  ae:	d1 07       	cpc	r29, r17
  b0:	c9 f7       	brne	.-14     	; 0xa4 <__do_global_ctors+0x8>
  b2:	0e 94 53 01 	call	0x2a6	; 0x2a6 <main>
  b6:	0c 94 77 03 	jmp	0x6ee	; 0x6ee <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <_ZN6Button4InitEci>:
#include "Button.h"
#include <avr/io.h>


void Button::Init(char port, int pin)
{
  be:	fc 01       	movw	r30, r24
	_port = port;
  c0:	60 83       	st	Z, r22
	_pin = pin;
  c2:	41 83       	std	Z+1, r20	; 0x01
  c4:	52 83       	std	Z+2, r21	; 0x02
	debounce = 10;
  c6:	8a e0       	ldi	r24, 0x0A	; 10
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	94 83       	std	Z+4, r25	; 0x04
  cc:	83 83       	std	Z+3, r24	; 0x03
	switch (_port){
  ce:	63 34       	cpi	r22, 0x43	; 67
  d0:	a1 f0       	breq	.+40     	; 0xfa <_ZN6Button4InitEci+0x3c>
  d2:	64 34       	cpi	r22, 0x44	; 68
  d4:	11 f1       	breq	.+68     	; 0x11a <_ZN6Button4InitEci+0x5c>
  d6:	62 34       	cpi	r22, 0x42	; 66
  d8:	79 f5       	brne	.+94     	; 0x138 <_ZN6Button4InitEci+0x7a>
		case 'B': DDRB &= ~(1<<(pin)); PORTB |= (1<<(pin)); break;
  da:	24 b1       	in	r18, 0x04	; 4
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	02 c0       	rjmp	.+4      	; 0xe6 <_ZN6Button4InitEci+0x28>
  e2:	88 0f       	add	r24, r24
  e4:	99 1f       	adc	r25, r25
  e6:	4a 95       	dec	r20
  e8:	e2 f7       	brpl	.-8      	; 0xe2 <_ZN6Button4InitEci+0x24>
  ea:	98 2f       	mov	r25, r24
  ec:	90 95       	com	r25
  ee:	92 23       	and	r25, r18
  f0:	94 b9       	out	0x04, r25	; 4
  f2:	95 b1       	in	r25, 0x05	; 5
  f4:	89 2b       	or	r24, r25
  f6:	85 b9       	out	0x05, r24	; 5
  f8:	08 95       	ret
		case 'C': DDRC &= ~(1<<(pin)); PORTC |= (1<<(pin)); break;
  fa:	27 b1       	in	r18, 0x07	; 7
  fc:	81 e0       	ldi	r24, 0x01	; 1
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	02 c0       	rjmp	.+4      	; 0x106 <_ZN6Button4InitEci+0x48>
 102:	88 0f       	add	r24, r24
 104:	99 1f       	adc	r25, r25
 106:	4a 95       	dec	r20
 108:	e2 f7       	brpl	.-8      	; 0x102 <_ZN6Button4InitEci+0x44>
 10a:	98 2f       	mov	r25, r24
 10c:	90 95       	com	r25
 10e:	92 23       	and	r25, r18
 110:	97 b9       	out	0x07, r25	; 7
 112:	98 b1       	in	r25, 0x08	; 8
 114:	89 2b       	or	r24, r25
 116:	88 b9       	out	0x08, r24	; 8
 118:	08 95       	ret
		case 'D': DDRD &= ~(1<<(pin)); PORTD |= (1<<(pin)); break;
 11a:	2a b1       	in	r18, 0x0a	; 10
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	02 c0       	rjmp	.+4      	; 0x126 <_ZN6Button4InitEci+0x68>
 122:	88 0f       	add	r24, r24
 124:	99 1f       	adc	r25, r25
 126:	4a 95       	dec	r20
 128:	e2 f7       	brpl	.-8      	; 0x122 <_ZN6Button4InitEci+0x64>
 12a:	98 2f       	mov	r25, r24
 12c:	90 95       	com	r25
 12e:	92 23       	and	r25, r18
 130:	9a b9       	out	0x0a, r25	; 10
 132:	9b b1       	in	r25, 0x0b	; 11
 134:	89 2b       	or	r24, r25
 136:	8b b9       	out	0x0b, r24	; 11
 138:	08 95       	ret

0000013a <_ZN5Input4InitEci>:

#include "Input.h"
#include <avr/io.h>

void Input::Init(char port, int pin)
{
 13a:	fc 01       	movw	r30, r24
	_port = port;
 13c:	60 83       	st	Z, r22
	_pin = pin;
 13e:	41 83       	std	Z+1, r20	; 0x01
 140:	52 83       	std	Z+2, r21	; 0x02
	switch (_port){
 142:	63 34       	cpi	r22, 0x43	; 67
 144:	a1 f0       	breq	.+40     	; 0x16e <_ZN5Input4InitEci+0x34>
 146:	64 34       	cpi	r22, 0x44	; 68
 148:	11 f1       	breq	.+68     	; 0x18e <_ZN5Input4InitEci+0x54>
 14a:	62 34       	cpi	r22, 0x42	; 66
 14c:	79 f5       	brne	.+94     	; 0x1ac <_ZN5Input4InitEci+0x72>
		case 'B': DDRB &= ~(1<<(pin)); PORTB |= (1<<(pin)); break;
 14e:	24 b1       	in	r18, 0x04	; 4
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	02 c0       	rjmp	.+4      	; 0x15a <_ZN5Input4InitEci+0x20>
 156:	88 0f       	add	r24, r24
 158:	99 1f       	adc	r25, r25
 15a:	4a 95       	dec	r20
 15c:	e2 f7       	brpl	.-8      	; 0x156 <_ZN5Input4InitEci+0x1c>
 15e:	98 2f       	mov	r25, r24
 160:	90 95       	com	r25
 162:	92 23       	and	r25, r18
 164:	94 b9       	out	0x04, r25	; 4
 166:	95 b1       	in	r25, 0x05	; 5
 168:	89 2b       	or	r24, r25
 16a:	85 b9       	out	0x05, r24	; 5
 16c:	08 95       	ret
		case 'C': DDRC &= ~(1<<(pin)); PORTC |= (1<<(pin)); break;
 16e:	27 b1       	in	r18, 0x07	; 7
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	02 c0       	rjmp	.+4      	; 0x17a <_ZN5Input4InitEci+0x40>
 176:	88 0f       	add	r24, r24
 178:	99 1f       	adc	r25, r25
 17a:	4a 95       	dec	r20
 17c:	e2 f7       	brpl	.-8      	; 0x176 <_ZN5Input4InitEci+0x3c>
 17e:	98 2f       	mov	r25, r24
 180:	90 95       	com	r25
 182:	92 23       	and	r25, r18
 184:	97 b9       	out	0x07, r25	; 7
 186:	98 b1       	in	r25, 0x08	; 8
 188:	89 2b       	or	r24, r25
 18a:	88 b9       	out	0x08, r24	; 8
 18c:	08 95       	ret
		case 'D': DDRD &= ~(1<<(pin)); PORTD |= (1<<(pin)); break;
 18e:	2a b1       	in	r18, 0x0a	; 10
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	02 c0       	rjmp	.+4      	; 0x19a <_ZN5Input4InitEci+0x60>
 196:	88 0f       	add	r24, r24
 198:	99 1f       	adc	r25, r25
 19a:	4a 95       	dec	r20
 19c:	e2 f7       	brpl	.-8      	; 0x196 <_ZN5Input4InitEci+0x5c>
 19e:	98 2f       	mov	r25, r24
 1a0:	90 95       	com	r25
 1a2:	92 23       	and	r25, r18
 1a4:	9a b9       	out	0x0a, r25	; 10
 1a6:	9b b1       	in	r25, 0x0b	; 11
 1a8:	89 2b       	or	r24, r25
 1aa:	8b b9       	out	0x0b, r24	; 11
 1ac:	08 95       	ret

000001ae <__vector_11>:
Input Protect;

Rotor Rotor;

ISR (TIMER1_COMPA_vect)
{
 1ae:	1f 92       	push	r1
 1b0:	0f 92       	push	r0
 1b2:	0f b6       	in	r0, 0x3f	; 63
 1b4:	0f 92       	push	r0
 1b6:	11 24       	eor	r1, r1
 1b8:	2f 93       	push	r18
 1ba:	3f 93       	push	r19
 1bc:	4f 93       	push	r20
 1be:	5f 93       	push	r21
 1c0:	6f 93       	push	r22
 1c2:	7f 93       	push	r23
 1c4:	8f 93       	push	r24
 1c6:	9f 93       	push	r25
 1c8:	af 93       	push	r26
 1ca:	bf 93       	push	r27
 1cc:	ef 93       	push	r30
 1ce:	ff 93       	push	r31
	Rotor.tik();
 1d0:	8c e3       	ldi	r24, 0x3C	; 60
 1d2:	91 e0       	ldi	r25, 0x01	; 1
 1d4:	0e 94 c7 02 	call	0x58e	; 0x58e <_ZN5Rotor3tikEv>
	
}
 1d8:	ff 91       	pop	r31
 1da:	ef 91       	pop	r30
 1dc:	bf 91       	pop	r27
 1de:	af 91       	pop	r26
 1e0:	9f 91       	pop	r25
 1e2:	8f 91       	pop	r24
 1e4:	7f 91       	pop	r23
 1e6:	6f 91       	pop	r22
 1e8:	5f 91       	pop	r21
 1ea:	4f 91       	pop	r20
 1ec:	3f 91       	pop	r19
 1ee:	2f 91       	pop	r18
 1f0:	0f 90       	pop	r0
 1f2:	0f be       	out	0x3f, r0	; 63
 1f4:	0f 90       	pop	r0
 1f6:	1f 90       	pop	r1
 1f8:	18 95       	reti

000001fa <_Z4Initv>:

void Init(){
	
	ButtonReset.Init('C',0);
 1fa:	40 e0       	ldi	r20, 0x00	; 0
 1fc:	50 e0       	ldi	r21, 0x00	; 0
 1fe:	63 e4       	ldi	r22, 0x43	; 67
 200:	8d ec       	ldi	r24, 0xCD	; 205
 202:	91 e0       	ldi	r25, 0x01	; 1
 204:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN6Button4InitEci>
	ButtonStop.Init('C',1);
 208:	41 e0       	ldi	r20, 0x01	; 1
 20a:	50 e0       	ldi	r21, 0x00	; 0
 20c:	63 e4       	ldi	r22, 0x43	; 67
 20e:	84 e0       	ldi	r24, 0x04	; 4
 210:	92 e0       	ldi	r25, 0x02	; 2
 212:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN6Button4InitEci>
	ButtonStart.Init('C',2);
 216:	42 e0       	ldi	r20, 0x02	; 2
 218:	50 e0       	ldi	r21, 0x00	; 0
 21a:	63 e4       	ldi	r22, 0x43	; 67
 21c:	89 ef       	ldi	r24, 0xF9	; 249
 21e:	91 e0       	ldi	r25, 0x01	; 1
 220:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN6Button4InitEci>
	ButtonReverse.Init('C',3);
 224:	43 e0       	ldi	r20, 0x03	; 3
 226:	50 e0       	ldi	r21, 0x00	; 0
 228:	63 e4       	ldi	r22, 0x43	; 67
 22a:	8e ee       	ldi	r24, 0xEE	; 238
 22c:	91 e0       	ldi	r25, 0x01	; 1
 22e:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN6Button4InitEci>
	ButtonUp.Init('C',4);
 232:	44 e0       	ldi	r20, 0x04	; 4
 234:	50 e0       	ldi	r21, 0x00	; 0
 236:	63 e4       	ldi	r22, 0x43	; 67
 238:	83 ee       	ldi	r24, 0xE3	; 227
 23a:	91 e0       	ldi	r25, 0x01	; 1
 23c:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN6Button4InitEci>
	ButtonDown.Init('C',5);
 240:	45 e0       	ldi	r20, 0x05	; 5
 242:	50 e0       	ldi	r21, 0x00	; 0
 244:	63 e4       	ldi	r22, 0x43	; 67
 246:	88 ed       	ldi	r24, 0xD8	; 216
 248:	91 e0       	ldi	r25, 0x01	; 1
 24a:	0e 94 5f 00 	call	0xbe	; 0xbe <_ZN6Button4InitEci>
	
	GreenLed.Init('B',5, true);
 24e:	21 e0       	ldi	r18, 0x01	; 1
 250:	45 e0       	ldi	r20, 0x05	; 5
 252:	50 e0       	ldi	r21, 0x00	; 0
 254:	62 e4       	ldi	r22, 0x42	; 66
 256:	88 ec       	ldi	r24, 0xC8	; 200
 258:	91 e0       	ldi	r25, 0x01	; 1
 25a:	0e 94 77 01 	call	0x2ee	; 0x2ee <_ZN6Output4InitEcib>
	RedLed.Init('B',4, true);
 25e:	21 e0       	ldi	r18, 0x01	; 1
 260:	44 e0       	ldi	r20, 0x04	; 4
 262:	50 e0       	ldi	r21, 0x00	; 0
 264:	62 e4       	ldi	r22, 0x42	; 66
 266:	83 ec       	ldi	r24, 0xC3	; 195
 268:	91 e0       	ldi	r25, 0x01	; 1
 26a:	0e 94 77 01 	call	0x2ee	; 0x2ee <_ZN6Output4InitEcib>
	BlueLed.Init('B',6,true);
 26e:	21 e0       	ldi	r18, 0x01	; 1
 270:	46 e0       	ldi	r20, 0x06	; 6
 272:	50 e0       	ldi	r21, 0x00	; 0
 274:	62 e4       	ldi	r22, 0x42	; 66
 276:	8e eb       	ldi	r24, 0xBE	; 190
 278:	91 e0       	ldi	r25, 0x01	; 1
 27a:	0e 94 77 01 	call	0x2ee	; 0x2ee <_ZN6Output4InitEcib>
	
	Protect.Init('D', 1);
 27e:	41 e0       	ldi	r20, 0x01	; 1
 280:	50 e0       	ldi	r21, 0x00	; 0
 282:	64 e4       	ldi	r22, 0x44	; 68
 284:	86 eb       	ldi	r24, 0xB6	; 182
 286:	91 e0       	ldi	r25, 0x01	; 1
 288:	0e 94 9d 00 	call	0x13a	; 0x13a <_ZN5Input4InitEci>
	Power.Init('D',0, false);
 28c:	20 e0       	ldi	r18, 0x00	; 0
 28e:	40 e0       	ldi	r20, 0x00	; 0
 290:	50 e0       	ldi	r21, 0x00	; 0
 292:	64 e4       	ldi	r22, 0x44	; 68
 294:	89 eb       	ldi	r24, 0xB9	; 185
 296:	91 e0       	ldi	r25, 0x01	; 1
 298:	0e 94 77 01 	call	0x2ee	; 0x2ee <_ZN6Output4InitEcib>
	
	Rotor.Init();
 29c:	8c e3       	ldi	r24, 0x3C	; 60
 29e:	91 e0       	ldi	r25, 0x01	; 1
 2a0:	0e 94 19 02 	call	0x432	; 0x432 <_ZN5Rotor4InitEv>
 2a4:	08 95       	ret

000002a6 <main>:
		
}

int main(void)
{
	Init();
 2a6:	0e 94 fd 00 	call	0x1fa	; 0x1fa <_Z4Initv>
	
    while (1) 
    {
		Rotor.SetFrequency(Rotor.frequency);
 2aa:	cc e3       	ldi	r28, 0x3C	; 60
 2ac:	d1 e0       	ldi	r29, 0x01	; 1
 2ae:	68 81       	ld	r22, Y
 2b0:	79 81       	ldd	r23, Y+1	; 0x01
 2b2:	ce 01       	movw	r24, r28
 2b4:	0e 94 73 02 	call	0x4e6	; 0x4e6 <_ZN5Rotor12SetFrequencyEi>
 2b8:	fa cf       	rjmp	.-12     	; 0x2ae <main+0x8>

000002ba <_GLOBAL__sub_I_ButtonStop>:
#define B_DerectPort  PORTB

#define C_Derect  2
#define C_DerectPort  PORTB

class Rotor
 2ba:	8c e3       	ldi	r24, 0x3C	; 60
 2bc:	e0 e0       	ldi	r30, 0x00	; 0
 2be:	f1 e0       	ldi	r31, 0x01	; 1
 2c0:	a4 e7       	ldi	r26, 0x74	; 116
 2c2:	b1 e0       	ldi	r27, 0x01	; 1
 2c4:	01 90       	ld	r0, Z+
 2c6:	0d 92       	st	X+, r0
 2c8:	8a 95       	dec	r24
 2ca:	e1 f7       	brne	.-8      	; 0x2c4 <_GLOBAL__sub_I_ButtonStop+0xa>
 2cc:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <__data_end+0x75>
 2d0:	10 92 b0 01 	sts	0x01B0, r1	; 0x8001b0 <__data_end+0x74>
 2d4:	8a e0       	ldi	r24, 0x0A	; 10
 2d6:	90 e0       	ldi	r25, 0x00	; 0
 2d8:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <__data_end+0x77>
 2dc:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <__data_end+0x76>
 2e0:	84 e1       	ldi	r24, 0x14	; 20
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <__data_end+0x79>
 2e8:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <__data_end+0x78>
 2ec:	08 95       	ret

000002ee <_ZN6Output4InitEcib>:
#include <avr/io.h>
#include <avr/interrupt.h>


void Output::Init(char port, int pin, bool inv)
{
 2ee:	fc 01       	movw	r30, r24
	_port = port;
 2f0:	60 83       	st	Z, r22
	_pin = pin;
 2f2:	41 83       	std	Z+1, r20	; 0x01
 2f4:	52 83       	std	Z+2, r21	; 0x02
	_inv = inv;
 2f6:	23 83       	std	Z+3, r18	; 0x03
	
	if (_inv){
 2f8:	22 23       	and	r18, r18
 2fa:	a1 f1       	breq	.+104    	; 0x364 <_ZN6Output4InitEcib+0x76>
		switch (_port){
 2fc:	63 34       	cpi	r22, 0x43	; 67
 2fe:	a1 f0       	breq	.+40     	; 0x328 <_ZN6Output4InitEcib+0x3a>
 300:	64 34       	cpi	r22, 0x44	; 68
 302:	09 f1       	breq	.+66     	; 0x346 <_ZN6Output4InitEcib+0x58>
 304:	62 34       	cpi	r22, 0x42	; 66
 306:	09 f0       	breq	.+2      	; 0x30a <_ZN6Output4InitEcib+0x1c>
 308:	62 c0       	rjmp	.+196    	; 0x3ce <_ZN6Output4InitEcib+0xe0>
			case 'B': PORTB |= (1<<(pin)); DDRB |= (1<<(pin)); break;
 30a:	25 b1       	in	r18, 0x05	; 5
 30c:	81 e0       	ldi	r24, 0x01	; 1
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	02 c0       	rjmp	.+4      	; 0x316 <_ZN6Output4InitEcib+0x28>
 312:	88 0f       	add	r24, r24
 314:	99 1f       	adc	r25, r25
 316:	4a 95       	dec	r20
 318:	e2 f7       	brpl	.-8      	; 0x312 <_ZN6Output4InitEcib+0x24>
 31a:	92 2f       	mov	r25, r18
 31c:	98 2b       	or	r25, r24
 31e:	95 b9       	out	0x05, r25	; 5
 320:	94 b1       	in	r25, 0x04	; 4
 322:	89 2b       	or	r24, r25
 324:	84 b9       	out	0x04, r24	; 4
 326:	08 95       	ret
			case 'C': PORTC |= (1<<(pin)); DDRC |= (1<<(pin)); break;
 328:	28 b1       	in	r18, 0x08	; 8
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	02 c0       	rjmp	.+4      	; 0x334 <_ZN6Output4InitEcib+0x46>
 330:	88 0f       	add	r24, r24
 332:	99 1f       	adc	r25, r25
 334:	4a 95       	dec	r20
 336:	e2 f7       	brpl	.-8      	; 0x330 <_ZN6Output4InitEcib+0x42>
 338:	92 2f       	mov	r25, r18
 33a:	98 2b       	or	r25, r24
 33c:	98 b9       	out	0x08, r25	; 8
 33e:	97 b1       	in	r25, 0x07	; 7
 340:	89 2b       	or	r24, r25
 342:	87 b9       	out	0x07, r24	; 7
 344:	08 95       	ret
			case 'D': PORTD |= (1<<(pin)); DDRD |= (1<<(pin)); break;
 346:	2b b1       	in	r18, 0x0b	; 11
 348:	81 e0       	ldi	r24, 0x01	; 1
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	02 c0       	rjmp	.+4      	; 0x352 <_ZN6Output4InitEcib+0x64>
 34e:	88 0f       	add	r24, r24
 350:	99 1f       	adc	r25, r25
 352:	4a 95       	dec	r20
 354:	e2 f7       	brpl	.-8      	; 0x34e <_ZN6Output4InitEcib+0x60>
 356:	92 2f       	mov	r25, r18
 358:	98 2b       	or	r25, r24
 35a:	9b b9       	out	0x0b, r25	; 11
 35c:	9a b1       	in	r25, 0x0a	; 10
 35e:	89 2b       	or	r24, r25
 360:	8a b9       	out	0x0a, r24	; 10
 362:	08 95       	ret
		}
		}else{
		switch (_port){
 364:	63 34       	cpi	r22, 0x43	; 67
 366:	a1 f0       	breq	.+40     	; 0x390 <_ZN6Output4InitEcib+0xa2>
 368:	64 34       	cpi	r22, 0x44	; 68
 36a:	11 f1       	breq	.+68     	; 0x3b0 <_ZN6Output4InitEcib+0xc2>
 36c:	62 34       	cpi	r22, 0x42	; 66
 36e:	79 f5       	brne	.+94     	; 0x3ce <_ZN6Output4InitEcib+0xe0>
			case 'B': PORTB &= ~(1<<(pin)); DDRB |= (1<<(pin)); break;
 370:	25 b1       	in	r18, 0x05	; 5
 372:	81 e0       	ldi	r24, 0x01	; 1
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	02 c0       	rjmp	.+4      	; 0x37c <_ZN6Output4InitEcib+0x8e>
 378:	88 0f       	add	r24, r24
 37a:	99 1f       	adc	r25, r25
 37c:	4a 95       	dec	r20
 37e:	e2 f7       	brpl	.-8      	; 0x378 <_ZN6Output4InitEcib+0x8a>
 380:	98 2f       	mov	r25, r24
 382:	90 95       	com	r25
 384:	92 23       	and	r25, r18
 386:	95 b9       	out	0x05, r25	; 5
 388:	94 b1       	in	r25, 0x04	; 4
 38a:	89 2b       	or	r24, r25
 38c:	84 b9       	out	0x04, r24	; 4
 38e:	08 95       	ret
			case 'C': PORTC &= ~(1<<(pin)); DDRC |= (1<<(pin)); break;
 390:	28 b1       	in	r18, 0x08	; 8
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	02 c0       	rjmp	.+4      	; 0x39c <_ZN6Output4InitEcib+0xae>
 398:	88 0f       	add	r24, r24
 39a:	99 1f       	adc	r25, r25
 39c:	4a 95       	dec	r20
 39e:	e2 f7       	brpl	.-8      	; 0x398 <_ZN6Output4InitEcib+0xaa>
 3a0:	98 2f       	mov	r25, r24
 3a2:	90 95       	com	r25
 3a4:	92 23       	and	r25, r18
 3a6:	98 b9       	out	0x08, r25	; 8
 3a8:	97 b1       	in	r25, 0x07	; 7
 3aa:	89 2b       	or	r24, r25
 3ac:	87 b9       	out	0x07, r24	; 7
 3ae:	08 95       	ret
			case 'D': PORTD &= ~(1<<(pin)); DDRD |= (1<<(pin)); break;
 3b0:	2b b1       	in	r18, 0x0b	; 11
 3b2:	81 e0       	ldi	r24, 0x01	; 1
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	02 c0       	rjmp	.+4      	; 0x3bc <_ZN6Output4InitEcib+0xce>
 3b8:	88 0f       	add	r24, r24
 3ba:	99 1f       	adc	r25, r25
 3bc:	4a 95       	dec	r20
 3be:	e2 f7       	brpl	.-8      	; 0x3b8 <_ZN6Output4InitEcib+0xca>
 3c0:	98 2f       	mov	r25, r24
 3c2:	90 95       	com	r25
 3c4:	92 23       	and	r25, r18
 3c6:	9b b9       	out	0x0b, r25	; 11
 3c8:	9a b1       	in	r25, 0x0a	; 10
 3ca:	89 2b       	or	r24, r25
 3cc:	8a b9       	out	0x0a, r24	; 10
 3ce:	08 95       	ret

000003d0 <_Z8pin_initv>:
	if(Started||Starting||Stoping){
		return false;
		}else{
		return true;
	}
}
 3d0:	84 b1       	in	r24, 0x04	; 4
 3d2:	8f 66       	ori	r24, 0x6F	; 111
 3d4:	84 b9       	out	0x04, r24	; 4
 3d6:	8a b1       	in	r24, 0x0a	; 10
 3d8:	81 66       	ori	r24, 0x61	; 97
 3da:	8a b9       	out	0x0a, r24	; 10
 3dc:	85 b1       	in	r24, 0x05	; 5
 3de:	87 60       	ori	r24, 0x07	; 7
 3e0:	85 b9       	out	0x05, r24	; 5
 3e2:	08 95       	ret

000003e4 <_Z11timer0_initv>:
 3e4:	84 b5       	in	r24, 0x24	; 36
 3e6:	83 6a       	ori	r24, 0xA3	; 163
 3e8:	84 bd       	out	0x24, r24	; 36
 3ea:	85 b5       	in	r24, 0x25	; 37
 3ec:	81 60       	ori	r24, 0x01	; 1
 3ee:	85 bd       	out	0x25, r24	; 37
 3f0:	17 bc       	out	0x27, r1	; 39
 3f2:	18 bc       	out	0x28, r1	; 40
 3f4:	08 95       	ret

000003f6 <_Z11timer1_initv>:
 3f6:	e1 e8       	ldi	r30, 0x81	; 129
 3f8:	f0 e0       	ldi	r31, 0x00	; 0
 3fa:	80 81       	ld	r24, Z
 3fc:	88 60       	ori	r24, 0x08	; 8
 3fe:	80 83       	st	Z, r24
 400:	af e6       	ldi	r26, 0x6F	; 111
 402:	b0 e0       	ldi	r27, 0x00	; 0
 404:	8c 91       	ld	r24, X
 406:	82 60       	ori	r24, 0x02	; 2
 408:	8c 93       	st	X, r24
 40a:	80 81       	ld	r24, Z
 40c:	81 60       	ori	r24, 0x01	; 1
 40e:	80 83       	st	Z, r24
 410:	78 94       	sei
 412:	08 95       	ret

00000414 <_Z11timer2_initv>:
 414:	e0 eb       	ldi	r30, 0xB0	; 176
 416:	f0 e0       	ldi	r31, 0x00	; 0
 418:	80 81       	ld	r24, Z
 41a:	83 68       	ori	r24, 0x83	; 131
 41c:	80 83       	st	Z, r24
 41e:	e1 eb       	ldi	r30, 0xB1	; 177
 420:	f0 e0       	ldi	r31, 0x00	; 0
 422:	80 81       	ld	r24, Z
 424:	81 60       	ori	r24, 0x01	; 1
 426:	80 83       	st	Z, r24
 428:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
 42c:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
 430:	08 95       	ret

00000432 <_ZN5Rotor4InitEv>:
 432:	0f 93       	push	r16
 434:	1f 93       	push	r17
 436:	cf 93       	push	r28
 438:	df 93       	push	r29
 43a:	ec 01       	movw	r28, r24
 43c:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <_Z8pin_initv>
 440:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <_Z11timer0_initv>
 444:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_Z11timer1_initv>
 448:	0e 94 0a 02 	call	0x414	; 0x414 <_Z11timer2_initv>
 44c:	46 e4       	ldi	r20, 0x46	; 70
 44e:	50 e0       	ldi	r21, 0x00	; 0
 450:	60 e0       	ldi	r22, 0x00	; 0
 452:	70 e0       	ldi	r23, 0x00	; 0
 454:	4c 83       	std	Y+4, r20	; 0x04
 456:	5d 83       	std	Y+5, r21	; 0x05
 458:	6e 83       	std	Y+6, r22	; 0x06
 45a:	7f 83       	std	Y+7, r23	; 0x07
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	a0 e0       	ldi	r26, 0x00	; 0
 462:	b0 e0       	ldi	r27, 0x00	; 0
 464:	88 87       	std	Y+8, r24	; 0x08
 466:	99 87       	std	Y+9, r25	; 0x09
 468:	aa 87       	std	Y+10, r26	; 0x0a
 46a:	bb 87       	std	Y+11, r27	; 0x0b
 46c:	06 e9       	ldi	r16, 0x96	; 150
 46e:	10 e0       	ldi	r17, 0x00	; 0
 470:	20 e0       	ldi	r18, 0x00	; 0
 472:	30 e0       	ldi	r19, 0x00	; 0
 474:	0c 87       	std	Y+12, r16	; 0x0c
 476:	1d 87       	std	Y+13, r17	; 0x0d
 478:	2e 87       	std	Y+14, r18	; 0x0e
 47a:	3f 87       	std	Y+15, r19	; 0x0f
 47c:	04 e6       	ldi	r16, 0x64	; 100
 47e:	10 e0       	ldi	r17, 0x00	; 0
 480:	20 e0       	ldi	r18, 0x00	; 0
 482:	30 e0       	ldi	r19, 0x00	; 0
 484:	08 8b       	std	Y+16, r16	; 0x10
 486:	19 8b       	std	Y+17, r17	; 0x11
 488:	2a 8b       	std	Y+18, r18	; 0x12
 48a:	3b 8b       	std	Y+19, r19	; 0x13
 48c:	00 e3       	ldi	r16, 0x30	; 48
 48e:	15 e7       	ldi	r17, 0x75	; 117
 490:	20 e0       	ldi	r18, 0x00	; 0
 492:	30 e0       	ldi	r19, 0x00	; 0
 494:	0c 8b       	std	Y+20, r16	; 0x14
 496:	1d 8b       	std	Y+21, r17	; 0x15
 498:	2e 8b       	std	Y+22, r18	; 0x16
 49a:	3f 8b       	std	Y+23, r19	; 0x17
 49c:	48 83       	st	Y, r20
 49e:	59 83       	std	Y+1, r21	; 0x01
 4a0:	6a 83       	std	Y+2, r22	; 0x02
 4a2:	7b 83       	std	Y+3, r23	; 0x03
 4a4:	2c ed       	ldi	r18, 0xDC	; 220
 4a6:	31 e0       	ldi	r19, 0x01	; 1
 4a8:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 4ac:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 4b0:	48 ec       	ldi	r20, 0xC8	; 200
 4b2:	50 e0       	ldi	r21, 0x00	; 0
 4b4:	60 e0       	ldi	r22, 0x00	; 0
 4b6:	70 e0       	ldi	r23, 0x00	; 0
 4b8:	4e 8f       	std	Y+30, r20	; 0x1e
 4ba:	5f 8f       	std	Y+31, r21	; 0x1f
 4bc:	68 a3       	std	Y+32, r22	; 0x20
 4be:	79 a3       	std	Y+33, r23	; 0x21
 4c0:	4e a3       	std	Y+38, r20	; 0x26
 4c2:	5f a3       	std	Y+39, r21	; 0x27
 4c4:	68 a7       	std	Y+40, r22	; 0x28
 4c6:	79 a7       	std	Y+41, r23	; 0x29
 4c8:	8a a3       	std	Y+34, r24	; 0x22
 4ca:	9b a3       	std	Y+35, r25	; 0x23
 4cc:	ac a3       	std	Y+36, r26	; 0x24
 4ce:	bd a3       	std	Y+37, r27	; 0x25
 4d0:	9f a7       	std	Y+47, r25	; 0x2f
 4d2:	8e a7       	std	Y+46, r24	; 0x2e
 4d4:	8e e1       	ldi	r24, 0x1E	; 30
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	9b ab       	std	Y+51, r25	; 0x33
 4da:	8a ab       	std	Y+50, r24	; 0x32
 4dc:	df 91       	pop	r29
 4de:	cf 91       	pop	r28
 4e0:	1f 91       	pop	r17
 4e2:	0f 91       	pop	r16
 4e4:	08 95       	ret

000004e6 <_ZN5Rotor12SetFrequencyEi>:
 4e6:	9b 01       	movw	r18, r22
 4e8:	77 0f       	add	r23, r23
 4ea:	44 0b       	sbc	r20, r20
 4ec:	55 0b       	sbc	r21, r21
 4ee:	fc 01       	movw	r30, r24
 4f0:	20 83       	st	Z, r18
 4f2:	31 83       	std	Z+1, r19	; 0x01
 4f4:	42 83       	std	Z+2, r20	; 0x02
 4f6:	53 83       	std	Z+3, r21	; 0x03
 4f8:	65 e3       	ldi	r22, 0x35	; 53
 4fa:	72 e8       	ldi	r23, 0x82	; 130
 4fc:	80 e0       	ldi	r24, 0x00	; 0
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	0e 94 4f 03 	call	0x69e	; 0x69e <__udivmodsi4>
 504:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 508:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 50c:	08 95       	ret

0000050e <_ZN5Rotor9set_A_PWMEi>:



void Rotor::set_A_PWM(int phasa){
	
	A_PWM = SinTable[phasa];
 50e:	9b 01       	movw	r18, r22
 510:	24 5e       	subi	r18, 0xE4	; 228
 512:	3f 4f       	sbci	r19, 0xFF	; 255
 514:	22 0f       	add	r18, r18
 516:	33 1f       	adc	r19, r19
 518:	82 0f       	add	r24, r18
 51a:	93 1f       	adc	r25, r19
 51c:	fc 01       	movw	r30, r24
 51e:	80 81       	ld	r24, Z
 520:	87 bd       	out	0x27, r24	; 39
	
	if (phasa >= 0 && phasa < 14){
 522:	6e 30       	cpi	r22, 0x0E	; 14
 524:	71 05       	cpc	r23, r1
 526:	08 f4       	brcc	.+2      	; 0x52a <_ZN5Rotor9set_A_PWMEi+0x1c>
		A_DerectPort |= (1<<A_Derect);
 528:	28 9a       	sbi	0x05, 0	; 5
	}
	if (phasa >= 14 && phasa < 30){
 52a:	6e 50       	subi	r22, 0x0E	; 14
 52c:	71 09       	sbc	r23, r1
 52e:	60 31       	cpi	r22, 0x10	; 16
 530:	71 05       	cpc	r23, r1
 532:	08 f4       	brcc	.+2      	; 0x536 <_ZN5Rotor9set_A_PWMEi+0x28>
		A_DerectPort &= ~(1<<A_Derect);
 534:	28 98       	cbi	0x05, 0	; 5
 536:	08 95       	ret

00000538 <_ZN5Rotor9set_B_PWMEi>:
	}
}

void Rotor::set_B_PWM(int phasa){
	
	B_PWM = SinTable[phasa];
 538:	9b 01       	movw	r18, r22
 53a:	24 5e       	subi	r18, 0xE4	; 228
 53c:	3f 4f       	sbci	r19, 0xFF	; 255
 53e:	22 0f       	add	r18, r18
 540:	33 1f       	adc	r19, r19
 542:	82 0f       	add	r24, r18
 544:	93 1f       	adc	r25, r19
 546:	fc 01       	movw	r30, r24
 548:	80 81       	ld	r24, Z
 54a:	88 bd       	out	0x28, r24	; 40
	
	if (phasa >= 0 && phasa < 14){
 54c:	6e 30       	cpi	r22, 0x0E	; 14
 54e:	71 05       	cpc	r23, r1
 550:	08 f4       	brcc	.+2      	; 0x554 <_ZN5Rotor9set_B_PWMEi+0x1c>
		B_DerectPort |= (1<<B_Derect);
 552:	29 9a       	sbi	0x05, 1	; 5
	}
	if (phasa >= 14 && phasa < 30){
 554:	6e 50       	subi	r22, 0x0E	; 14
 556:	71 09       	sbc	r23, r1
 558:	60 31       	cpi	r22, 0x10	; 16
 55a:	71 05       	cpc	r23, r1
 55c:	08 f4       	brcc	.+2      	; 0x560 <_ZN5Rotor9set_B_PWMEi+0x28>
		B_DerectPort &= ~(1<<B_Derect);
 55e:	29 98       	cbi	0x05, 1	; 5
 560:	08 95       	ret

00000562 <_ZN5Rotor9set_C_PWMEi>:
	}
}

void Rotor::set_C_PWM(int phasa){

	C_PWM = SinTable[phasa];
 562:	9b 01       	movw	r18, r22
 564:	24 5e       	subi	r18, 0xE4	; 228
 566:	3f 4f       	sbci	r19, 0xFF	; 255
 568:	22 0f       	add	r18, r18
 56a:	33 1f       	adc	r19, r19
 56c:	82 0f       	add	r24, r18
 56e:	93 1f       	adc	r25, r19
 570:	fc 01       	movw	r30, r24
 572:	80 81       	ld	r24, Z
 574:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
	
	if (phasa >= 0 && phasa < 14){
 578:	6e 30       	cpi	r22, 0x0E	; 14
 57a:	71 05       	cpc	r23, r1
 57c:	08 f4       	brcc	.+2      	; 0x580 <_ZN5Rotor9set_C_PWMEi+0x1e>
		C_DerectPort |= (1<<C_Derect);
 57e:	2a 9a       	sbi	0x05, 2	; 5
	}
	if (phasa >= 14 && phasa < 30){
 580:	6e 50       	subi	r22, 0x0E	; 14
 582:	71 09       	sbc	r23, r1
 584:	60 31       	cpi	r22, 0x10	; 16
 586:	71 05       	cpc	r23, r1
 588:	08 f4       	brcc	.+2      	; 0x58c <_ZN5Rotor9set_C_PWMEi+0x2a>
		C_DerectPort &= ~(1<<C_Derect);
 58a:	2a 98       	cbi	0x05, 2	; 5
 58c:	08 95       	ret

0000058e <_ZN5Rotor3tikEv>:
	}
}

void Rotor::tik(){
 58e:	0f 93       	push	r16
 590:	1f 93       	push	r17
 592:	cf 93       	push	r28
 594:	df 93       	push	r29
 596:	ec 01       	movw	r28, r24
	phasa_a++;
 598:	fc 01       	movw	r30, r24
 59a:	ec 58       	subi	r30, 0x8C	; 140
 59c:	ff 4f       	sbci	r31, 0xFF	; 255
 59e:	80 81       	ld	r24, Z
 5a0:	91 81       	ldd	r25, Z+1	; 0x01
 5a2:	01 96       	adiw	r24, 0x01	; 1
 5a4:	91 83       	std	Z+1, r25	; 0x01
 5a6:	80 83       	st	Z, r24
	phasa_b++;
 5a8:	de 01       	movw	r26, r28
 5aa:	aa 58       	subi	r26, 0x8A	; 138
 5ac:	bf 4f       	sbci	r27, 0xFF	; 255
 5ae:	8d 91       	ld	r24, X+
 5b0:	9c 91       	ld	r25, X
 5b2:	11 97       	sbiw	r26, 0x01	; 1
 5b4:	01 96       	adiw	r24, 0x01	; 1
 5b6:	11 96       	adiw	r26, 0x01	; 1
 5b8:	9c 93       	st	X, r25
 5ba:	8e 93       	st	-X, r24
	phasa_c++;
 5bc:	12 96       	adiw	r26, 0x02	; 2
 5be:	8d 91       	ld	r24, X+
 5c0:	9c 91       	ld	r25, X
 5c2:	11 97       	sbiw	r26, 0x01	; 1
 5c4:	01 96       	adiw	r24, 0x01	; 1
 5c6:	11 96       	adiw	r26, 0x01	; 1
 5c8:	9c 93       	st	X, r25
 5ca:	8e 93       	st	-X, r24
	
	if (phasa_a>29){phasa_a=0;}
 5cc:	80 81       	ld	r24, Z
 5ce:	91 81       	ldd	r25, Z+1	; 0x01
 5d0:	4e 97       	sbiw	r24, 0x1e	; 30
 5d2:	14 f0       	brlt	.+4      	; 0x5d8 <_ZN5Rotor3tikEv+0x4a>
 5d4:	11 82       	std	Z+1, r1	; 0x01
 5d6:	10 82       	st	Z, r1
	if (phasa_b>29){phasa_b=0;}
 5d8:	fe 01       	movw	r30, r28
 5da:	ea 58       	subi	r30, 0x8A	; 138
 5dc:	ff 4f       	sbci	r31, 0xFF	; 255
 5de:	80 81       	ld	r24, Z
 5e0:	91 81       	ldd	r25, Z+1	; 0x01
 5e2:	4e 97       	sbiw	r24, 0x1e	; 30
 5e4:	14 f0       	brlt	.+4      	; 0x5ea <_ZN5Rotor3tikEv+0x5c>
 5e6:	11 82       	std	Z+1, r1	; 0x01
 5e8:	10 82       	st	Z, r1
	if (phasa_c>29){phasa_c=0;}
 5ea:	fe 01       	movw	r30, r28
 5ec:	e8 58       	subi	r30, 0x88	; 136
 5ee:	ff 4f       	sbci	r31, 0xFF	; 255
 5f0:	80 81       	ld	r24, Z
 5f2:	91 81       	ldd	r25, Z+1	; 0x01
 5f4:	4e 97       	sbiw	r24, 0x1e	; 30
 5f6:	14 f0       	brlt	.+4      	; 0x5fc <_ZN5Rotor3tikEv+0x6e>
 5f8:	11 82       	std	Z+1, r1	; 0x01
 5fa:	10 82       	st	Z, r1
	
	set_A_PWM(phasa_a);
 5fc:	8e 01       	movw	r16, r28
 5fe:	0c 58       	subi	r16, 0x8C	; 140
 600:	1f 4f       	sbci	r17, 0xFF	; 255
 602:	f8 01       	movw	r30, r16
 604:	60 81       	ld	r22, Z
 606:	71 81       	ldd	r23, Z+1	; 0x01
 608:	ce 01       	movw	r24, r28
 60a:	0e 94 87 02 	call	0x50e	; 0x50e <_ZN5Rotor9set_A_PWMEi>
	set_B_PWM(phasa_b);
 60e:	fe 01       	movw	r30, r28
 610:	ea 58       	subi	r30, 0x8A	; 138
 612:	ff 4f       	sbci	r31, 0xFF	; 255
 614:	60 81       	ld	r22, Z
 616:	71 81       	ldd	r23, Z+1	; 0x01
 618:	ce 01       	movw	r24, r28
 61a:	0e 94 9c 02 	call	0x538	; 0x538 <_ZN5Rotor9set_B_PWMEi>
	set_C_PWM(phasa_c);
 61e:	fe 01       	movw	r30, r28
 620:	e8 58       	subi	r30, 0x88	; 136
 622:	ff 4f       	sbci	r31, 0xFF	; 255
 624:	60 81       	ld	r22, Z
 626:	71 81       	ldd	r23, Z+1	; 0x01
 628:	ce 01       	movw	r24, r28
 62a:	0e 94 b1 02 	call	0x562	; 0x562 <_ZN5Rotor9set_C_PWMEi>
	
	if (phasa_a==0){PORTD |= (1<<0);Timing = Timing + 10 * frequency/2 ;}
 62e:	f8 01       	movw	r30, r16
 630:	80 81       	ld	r24, Z
 632:	91 81       	ldd	r25, Z+1	; 0x01
 634:	89 2b       	or	r24, r25
 636:	39 f5       	brne	.+78     	; 0x686 <_ZN5Rotor3tikEv+0xf8>
 638:	58 9a       	sbi	0x0b, 0	; 11
 63a:	88 81       	ld	r24, Y
 63c:	99 81       	ldd	r25, Y+1	; 0x01
 63e:	aa 81       	ldd	r26, Y+2	; 0x02
 640:	bb 81       	ldd	r27, Y+3	; 0x03
 642:	88 0f       	add	r24, r24
 644:	99 1f       	adc	r25, r25
 646:	aa 1f       	adc	r26, r26
 648:	bb 1f       	adc	r27, r27
 64a:	ac 01       	movw	r20, r24
 64c:	bd 01       	movw	r22, r26
 64e:	44 0f       	add	r20, r20
 650:	55 1f       	adc	r21, r21
 652:	66 1f       	adc	r22, r22
 654:	77 1f       	adc	r23, r23
 656:	44 0f       	add	r20, r20
 658:	55 1f       	adc	r21, r21
 65a:	66 1f       	adc	r22, r22
 65c:	77 1f       	adc	r23, r23
 65e:	84 0f       	add	r24, r20
 660:	95 1f       	adc	r25, r21
 662:	a6 1f       	adc	r26, r22
 664:	b7 1f       	adc	r27, r23
 666:	b6 95       	lsr	r27
 668:	a7 95       	ror	r26
 66a:	97 95       	ror	r25
 66c:	87 95       	ror	r24
 66e:	4a a5       	ldd	r20, Y+42	; 0x2a
 670:	5b a5       	ldd	r21, Y+43	; 0x2b
 672:	6c a5       	ldd	r22, Y+44	; 0x2c
 674:	7d a5       	ldd	r23, Y+45	; 0x2d
 676:	84 0f       	add	r24, r20
 678:	95 1f       	adc	r25, r21
 67a:	a6 1f       	adc	r26, r22
 67c:	b7 1f       	adc	r27, r23
 67e:	8a a7       	std	Y+42, r24	; 0x2a
 680:	9b a7       	std	Y+43, r25	; 0x2b
 682:	ac a7       	std	Y+44, r26	; 0x2c
 684:	bd a7       	std	Y+45, r27	; 0x2d
	if (phasa_a==15){PORTD  &= ~(1<<0);} 
 686:	cc 58       	subi	r28, 0x8C	; 140
 688:	df 4f       	sbci	r29, 0xFF	; 255
 68a:	88 81       	ld	r24, Y
 68c:	99 81       	ldd	r25, Y+1	; 0x01
 68e:	0f 97       	sbiw	r24, 0x0f	; 15
 690:	09 f4       	brne	.+2      	; 0x694 <_ZN5Rotor3tikEv+0x106>
 692:	58 98       	cbi	0x0b, 0	; 11
}
 694:	df 91       	pop	r29
 696:	cf 91       	pop	r28
 698:	1f 91       	pop	r17
 69a:	0f 91       	pop	r16
 69c:	08 95       	ret

0000069e <__udivmodsi4>:
 69e:	a1 e2       	ldi	r26, 0x21	; 33
 6a0:	1a 2e       	mov	r1, r26
 6a2:	aa 1b       	sub	r26, r26
 6a4:	bb 1b       	sub	r27, r27
 6a6:	fd 01       	movw	r30, r26
 6a8:	0d c0       	rjmp	.+26     	; 0x6c4 <__udivmodsi4_ep>

000006aa <__udivmodsi4_loop>:
 6aa:	aa 1f       	adc	r26, r26
 6ac:	bb 1f       	adc	r27, r27
 6ae:	ee 1f       	adc	r30, r30
 6b0:	ff 1f       	adc	r31, r31
 6b2:	a2 17       	cp	r26, r18
 6b4:	b3 07       	cpc	r27, r19
 6b6:	e4 07       	cpc	r30, r20
 6b8:	f5 07       	cpc	r31, r21
 6ba:	20 f0       	brcs	.+8      	; 0x6c4 <__udivmodsi4_ep>
 6bc:	a2 1b       	sub	r26, r18
 6be:	b3 0b       	sbc	r27, r19
 6c0:	e4 0b       	sbc	r30, r20
 6c2:	f5 0b       	sbc	r31, r21

000006c4 <__udivmodsi4_ep>:
 6c4:	66 1f       	adc	r22, r22
 6c6:	77 1f       	adc	r23, r23
 6c8:	88 1f       	adc	r24, r24
 6ca:	99 1f       	adc	r25, r25
 6cc:	1a 94       	dec	r1
 6ce:	69 f7       	brne	.-38     	; 0x6aa <__udivmodsi4_loop>
 6d0:	60 95       	com	r22
 6d2:	70 95       	com	r23
 6d4:	80 95       	com	r24
 6d6:	90 95       	com	r25
 6d8:	9b 01       	movw	r18, r22
 6da:	ac 01       	movw	r20, r24
 6dc:	bd 01       	movw	r22, r26
 6de:	cf 01       	movw	r24, r30
 6e0:	08 95       	ret

000006e2 <__tablejump2__>:
 6e2:	ee 0f       	add	r30, r30
 6e4:	ff 1f       	adc	r31, r31
 6e6:	05 90       	lpm	r0, Z+
 6e8:	f4 91       	lpm	r31, Z
 6ea:	e0 2d       	mov	r30, r0
 6ec:	09 94       	ijmp

000006ee <_exit>:
 6ee:	f8 94       	cli

000006f0 <__stop_program>:
 6f0:	ff cf       	rjmp	.-2      	; 0x6f0 <__stop_program>
